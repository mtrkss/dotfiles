{ config, pkgs, username, ... }:{
boot.kernelParams = [
  "amd_iommu=on"
  "iommu=pt"
  "video=efifb:off"
  "disable_idle_d3=1"
];

boot.kernelModules = [
  "kvm_amd"
  "vfio-pci"
];

systemd.services.libvirtd = {
  path = let env = pkgs.buildEnv {
    name = "qemu-hook-env";
    paths = with pkgs; [
      bash
      libvirt
      kmod
      systemd
      ripgrep
      sd
    ];
  };
  in [ env ];
  preStart = ''
mkdir -p /var/lib/libvirt/hooks
mkdir -p /var/lib/libvirt/hooks/qemu.d/win10/prepare/begin
mkdir -p /var/lib/libvirt/hooks/qemu.d/win10/release/end
mkdir -p /var/lib/libvirt/vgabios

ln -sf /home/${username}/.kvmgpupass/qemu /var/lib/libvirt/hooks/qemu
ln -sf /home/${username}/.kvmgpupass/kvm.conf /var/lib/libvirt/hooks/kvm.conf
ln -sf /home/${username}/.kvmgpupass/start.sh /var/lib/libvirt/hooks/qemu.d/win10/prepare/begin/start.sh
ln -sf /home/${username}/.kvmgpupass/stop.sh /var/lib/libvirt/hooks/qemu.d/win10/release/end/stop.sh
ln -sf /home/${username}/.kvmgpupass/vgabios.rom /var/lib/libvirt/vgabios/patched.rom

#chmod +x /var/lib/libvirt/hooks/qemu
#chmod +x /var/lib/libvirt/hooks/kvm.conf
#chmod +x /var/lib/libvirt/hooks/qemu.d/win10/prepare/begin/start.sh
#chmod +x /var/lib/libvirt/hooks/qemu.d/win10/release/end/stop.sh
  '';
};

}
